{"version":3,"sources":["../src/iterateJsdoc.js"],"names":["parseComment","commentNode","indent","value","parsers","commentParser","PARSERS","parse_tag","parse_type","str","data","includes","tag","parse_name","parse_description","getUtils","node","jsdoc","jsdocNode","tagNamePreference","additionalTagNames","allowEmptyNamepaths","overrideReplacesDocs","implementsReplacesDocs","augmentsExtendsReplacesDocs","allowOverrideWithoutParam","allowImplementsWithoutParam","allowAugmentsExtendsWithoutParam","checkSeesForNamepaths","report","context","ancestors","getAncestors","sourceCode","getSourceCode","utils","getFunctionParameterNames","jsdocUtils","isConstructor","parent","kind","isSetter","getJsdocParameterNamesDeep","param","getPreferredTagName","getJsdocParameterNames","name","allowObjectReturn","defaultMessage","ret","isObject","replacement","message","getTags","isValidTag","hasATag","hasTag","avoidDocsParamOnly","classHasTag","avoidDocsParamConditionally","avoidDocs","exemptedBy","_","get","length","getPresentTags","isNamepathDefiningTag","tagName","isNamepathTag","isTagWithType","passesEmptyNamepathCheck","isPotentiallyEmptyNamepathTag","hasDefinedTypeReturnTag","hasReturnValue","ignoreAsync","isAsync","async","filterTags","item","tagList","filter","tags","getClassNode","greatGrandParent","slice","greatGrandParentValue","getFirstToken","getClassJsdoc","classNode","classJsdocNode","repeat","loc","start","column","classJsdoc","forEachPreferredTag","arrayHandler","targetTagName","matchingJsdocTags","forEach","matchingJsdocTag","getSettings","settings","ignorePrivate","Boolean","exampleCodeRegex","rejectExampleCodeRegex","matchingFileName","baseConfig","configFile","eslintrcForExamples","allowInlineConfig","reportUnusedDisableDirectives","captionRequired","noDefaultExampleRules","forceRequireReturn","avoidExampleOnConstructors","makeReport","fix","jsdocLoc","lineNumber","line","end","colNumber","iterateAllJsdocs","iterator","ruleConfig","create","comments","getAllComments","comment","getText","startsWith","meta","iterateJsdoc","metaType","TypeError","returns","contexts","contextDefaults","enforcedContexts","Array","isArray","checkJsdoc","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression","getContextObject"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAG,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAC5C;AACA,SAAO,4BAAcA,MAAM,GAAG,IAAT,GAAgBD,WAAW,CAACE,KAA5B,GAAoCD,MAApC,GAA6C,IAA3D,EAAiE;AACtE;AACAE,IAAAA,OAAO,EAAE,CACPC,uBAAcC,OAAd,CAAsBC,SADf,EAEPF,uBAAcC,OAAd,CAAsBE,UAFf,EAGP,CAACC,GAAD,EAAMC,IAAN,KAAe;AACb,UAAI,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,WAAhC,EAA6CC,QAA7C,CAAsDD,IAAI,CAACE,GAA3D,CAAJ,EAAqE;AACnE,eAAO,IAAP;AACD;;AAED,aAAOP,uBAAcC,OAAd,CAAsBO,UAAtB,CAAiCJ,GAAjC,EAAsCC,IAAtC,CAAP;AACD,KATM,EAUPL,uBAAcC,OAAd,CAAsBQ,iBAVf;AAF6D,GAAjE,EAcJ,CAdI,KAcE,EAdT;AAeD,CAjBD;;;;AAmBA,MAAMC,QAAQ,GAAG,CACfC,IADe,EAEfC,KAFe,EAGfC,SAHe,EAIf;AACEC,EAAAA,iBADF;AAEEC,EAAAA,kBAFF;AAGEC,EAAAA,mBAHF;AAIEC,EAAAA,oBAJF;AAKEC,EAAAA,sBALF;AAMEC,EAAAA,2BANF;AAOEC,EAAAA,yBAPF;AAQEC,EAAAA,2BARF;AASEC,EAAAA,gCATF;AAUEC,EAAAA;AAVF,CAJe,EAgBfC,MAhBe,EAiBfC,OAjBe,KAkBZ;AACH,QAAMC,SAAS,GAAGD,OAAO,CAACE,YAAR,EAAlB;AACA,QAAMC,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;AAEA,QAAMC,KAAK,GAAG,EAAd;;AAEAA,EAAAA,KAAK,CAACC,yBAAN,GAAkC,MAAM;AACtC,WAAOC,oBAAWD,yBAAX,CAAqCpB,IAArC,CAAP;AACD,GAFD;;AAIAmB,EAAAA,KAAK,CAACG,aAAN,GAAsB,MAAM;AAC1B,WAAOtB,IAAI,CAACuB,MAAL,IAAevB,IAAI,CAACuB,MAAL,CAAYC,IAAZ,KAAqB,aAA3C;AACD,GAFD;;AAIAL,EAAAA,KAAK,CAACM,QAAN,GAAiB,MAAM;AACrB,WAAOzB,IAAI,CAACuB,MAAL,CAAYC,IAAZ,KAAqB,KAA5B;AACD,GAFD;;AAIAL,EAAAA,KAAK,CAACO,0BAAN,GAAmC,MAAM;AACvC,UAAMC,KAAK,GAAGR,KAAK,CAACS,mBAAN,CAA0B,OAA1B,CAAd;;AACA,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AAED,WAAON,oBAAWK,0BAAX,CAAsCzB,KAAtC,EAA6C0B,KAA7C,CAAP;AACD,GAPD;;AASAR,EAAAA,KAAK,CAACU,sBAAN,GAA+B,MAAM;AACnC,UAAMF,KAAK,GAAGR,KAAK,CAACS,mBAAN,CAA0B,OAA1B,CAAd;;AACA,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AAED,WAAON,oBAAWQ,sBAAX,CAAkC5B,KAAlC,EAAyC0B,KAAzC,CAAP;AACD,GAPD;;AASAR,EAAAA,KAAK,CAACS,mBAAN,GAA4B,CAACE,IAAD,EAAOC,iBAAiB,GAAG,KAA3B,EAAkCC,cAAc,GAAI,qBAAoBF,IAAK,IAA7E,KAAqF;AAC/G,UAAMG,GAAG,GAAGZ,oBAAWO,mBAAX,CAA+BE,IAA/B,EAAqC3B,iBAArC,CAAZ;;AACA,UAAM+B,QAAQ,GAAGD,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAvC;;AACA,QAAIA,GAAG,KAAK,KAAR,IAAiBC,QAAQ,IAAI,CAACD,GAAG,CAACE,WAAtC,EAAmD;AACjD,YAAMC,OAAO,GAAGF,QAAQ,IAAID,GAAG,CAACG,OAAhB,IAA2BJ,cAA3C;AACAnB,MAAAA,MAAM,CAACuB,OAAD,EAAU,IAAV,EAAgBjB,KAAK,CAACkB,OAAN,CAAcP,IAAd,EAAoB,CAApB,CAAhB,CAAN;AAEA,aAAO,KAAP;AACD;;AAED,WAAOI,QAAQ,IAAI,CAACH,iBAAb,GAAiCE,GAAG,CAACE,WAArC,GAAmDF,GAA1D;AACD,GAXD;;AAaAd,EAAAA,KAAK,CAACmB,UAAN,GAAoBR,IAAD,IAAU;AAC3B,WAAOT,oBAAWiB,UAAX,CAAsBR,IAAtB,EAA4B1B,kBAA5B,CAAP;AACD,GAFD;;AAIAe,EAAAA,KAAK,CAACoB,OAAN,GAAiBT,IAAD,IAAU;AACxB,WAAOT,oBAAWkB,OAAX,CAAmBtC,KAAnB,EAA0B6B,IAA1B,CAAP;AACD,GAFD;;AAIAX,EAAAA,KAAK,CAACqB,MAAN,GAAgBV,IAAD,IAAU;AACvB,WAAOT,oBAAWmB,MAAX,CAAkBvC,KAAlB,EAAyB6B,IAAzB,CAAP;AACD,GAFD,CAzDG,CA6DH;;;AACAX,EAAAA,KAAK,CAACsB,kBAAN,GAA2B,MAAM;AAC/B;AAEA;AACA,QAAI,CAACtB,KAAK,CAACqB,MAAN,CAAa,UAAb,KAA4BrB,KAAK,CAACuB,WAAN,CAAkB,UAAlB,CAA7B,KAA+DjC,yBAAyB,KAAK,KAAjG,EAAwG;AACtG,aAAO,IAAP;AACD,KAN8B,CAQ/B;AACA;;;AACA,QAAI,CAACU,KAAK,CAACqB,MAAN,CAAa,YAAb,KAA8BrB,KAAK,CAACuB,WAAN,CAAkB,YAAlB,CAA/B,KAAmEhC,2BAA2B,KAAK,KAAvG,EAA8G;AAC5G,aAAO,IAAP;AACD,KAZ8B,CAc/B;;;AACA,QAAI,CAACS,KAAK,CAACqB,MAAN,CAAa,UAAb,KAA4BrB,KAAK,CAACqB,MAAN,CAAa,SAAb,CAA5B,IACHrB,KAAK,CAACuB,WAAN,CAAkB,UAAlB,CADG,IAC8BvB,KAAK,CAACuB,WAAN,CAAkB,SAAlB,CAD/B,KACgE/B,gCADpE,EACsG;AACpG,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GArBD;;AAuBAQ,EAAAA,KAAK,CAACwB,2BAAN,GAAqChB,KAAD,IAAW;AAC7C;AACA;AACA,WAAO,CAACA,KAAK,IAAIrB,oBAAT,IAAiC,CAACqB,KAAD,IAAUrB,oBAAoB,KAAK,KAArE,MACJa,KAAK,CAACqB,MAAN,CAAa,UAAb,KAA4BrB,KAAK,CAACuB,WAAN,CAAkB,UAAlB,CADxB,KAEP,CAACf,KAAK,IAAIpB,sBAAT,IAAmC,CAACoB,KAAD,IAAUpB,sBAAsB,KAAK,KAAzE,MACGY,KAAK,CAACqB,MAAN,CAAa,YAAb,KAA8BrB,KAAK,CAACuB,WAAN,CAAkB,YAAlB,CADjC,CAFA;AAID,GAPD;;AASAvB,EAAAA,KAAK,CAACyB,SAAN,GAAmBjB,KAAD,IAAW;AAC3B,QAAIA,KAAK,IAAIR,KAAK,CAACsB,kBAAN,EAAT,IACFtB,KAAK,CAACwB,2BAAN,CAAkChB,KAAlC,CADE,IAGF;AACAR,IAAAA,KAAK,CAACqB,MAAN,CAAa,YAAb,CAJE,IAMFhC,2BAA2B,KACxBW,KAAK,CAACoB,OAAN,CAAc,CAAC,UAAD,EAAa,SAAb,CAAd,KACCpB,KAAK,CAACuB,WAAN,CAAkB,UAAlB,CADD,IAEGvB,KAAK,CAACuB,WAAN,CAAkB,SAAlB,CAHqB,CAN7B,EASuC;AACrC,aAAO,IAAP;AACD;;AAED,UAAMG,UAAU,GAAGC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,uBAAf,CAAnB;;AACA,QAAI+B,UAAU,IAAIA,UAAU,CAACG,MAAzB,IAAmC7B,KAAK,CAAC8B,cAAN,CAAqBJ,UAArB,EAAiCG,MAAxE,EAAgF;AAC9E,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GApBD;;AAsBA7B,EAAAA,KAAK,CAAC+B,qBAAN,GAA+BC,OAAD,IAAa;AACzC,WAAO9B,oBAAW6B,qBAAX,CAAiCC,OAAjC,CAAP;AACD,GAFD;;AAGAhC,EAAAA,KAAK,CAACiC,aAAN,GAAuBD,OAAD,IAAa;AACjC,WAAO9B,oBAAW+B,aAAX,CAAyBD,OAAzB,EAAkCvC,qBAAlC,CAAP;AACD,GAFD;;AAIAO,EAAAA,KAAK,CAACkC,aAAN,GAAuBF,OAAD,IAAa;AACjC,WAAO9B,oBAAWgC,aAAX,CAAyBF,OAAzB,CAAP;AACD,GAFD;;AAIAhC,EAAAA,KAAK,CAACmC,wBAAN,GAAkC1D,GAAD,IAAS;AACxC,WAAO,CAACA,GAAG,CAACkC,IAAL,IAAazB,mBAAb,IACLgB,oBAAWkC,6BAAX,CAAyC3D,GAAG,CAACA,GAA7C,CADF;AAED,GAHD;;AAKAuB,EAAAA,KAAK,CAACqC,uBAAN,GAAiC5D,GAAD,IAAS;AACvC,WAAOyB,oBAAWmC,uBAAX,CAAmC5D,GAAnC,CAAP;AACD,GAFD;;AAIAuB,EAAAA,KAAK,CAACsC,cAAN,GAAuB,CAACC,WAAW,GAAG,KAAf,KAAyB;AAC9C,WAAOrC,oBAAWoC,cAAX,CAA0BzD,IAA1B,EAAgCc,OAAhC,EAAyC4C,WAAzC,CAAP;AACD,GAFD;;AAIAvC,EAAAA,KAAK,CAACwC,OAAN,GAAgB,MAAM;AACpB,WAAO3D,IAAI,CAAC4D,KAAZ;AACD,GAFD;;AAIAzC,EAAAA,KAAK,CAACkB,OAAN,GAAiBc,OAAD,IAAa;AAC3B,WAAOhC,KAAK,CAAC0C,UAAN,CAAkBC,IAAD,IAAU;AAChC,aAAOA,IAAI,CAAClE,GAAL,KAAauD,OAApB;AACD,KAFM,CAAP;AAGD,GAJD;;AAMAhC,EAAAA,KAAK,CAAC8B,cAAN,GAAwBc,OAAD,IAAa;AAClC,WAAO5C,KAAK,CAAC0C,UAAN,CAAkBjE,GAAD,IAAS;AAC/B,aAAOmE,OAAO,CAACpE,QAAR,CAAiBC,GAAG,CAACA,GAArB,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMAuB,EAAAA,KAAK,CAAC0C,UAAN,GAAoBG,MAAD,IAAY;AAC7B,WAAO,CAAC/D,KAAK,CAACgE,IAAN,IAAc,EAAf,EAAmBD,MAAnB,CAA0BA,MAA1B,CAAP;AACD,GAFD;;AAIA7C,EAAAA,KAAK,CAAC+C,YAAN,GAAqB,MAAM;AACzB,UAAMC,gBAAgB,GAAGpD,SAAS,CAACqD,KAAV,CAAgB,CAAC,CAAjB,EAAoB,CAApB,CAAzB;AACA,UAAMC,qBAAqB,GAAGF,gBAAgB,IAAIlD,UAAU,CAACqD,aAAX,CAAyBH,gBAAzB,EAA2ChF,KAA7F;;AAEA,QAAIkF,qBAAqB,KAAK,OAA9B,EAAuC;AACrC,aAAOF,gBAAP;AACD;;AAED,WAAO,KAAP;AACD,GATD;;AAWAhD,EAAAA,KAAK,CAACoD,aAAN,GAAsB,MAAM;AAC1B,UAAMC,SAAS,GAAGrD,KAAK,CAAC+C,YAAN,EAAlB;AACA,UAAMO,cAAc,GAAG,8BAAgBxD,UAAhB,EAA4BuD,SAA5B,CAAvB;;AAEA,QAAIC,cAAJ,EAAoB;AAClB,YAAMvF,MAAM,GAAG4D,gBAAE4B,MAAF,CAAS,GAAT,EAAcD,cAAc,CAACE,GAAf,CAAmBC,KAAnB,CAAyBC,MAAvC,CAAf;;AAEA,aAAO7F,YAAY,CAACyF,cAAD,EAAiBvF,MAAjB,CAAnB;AACD;;AAED,WAAO,IAAP;AACD,GAXD;;AAaAiC,EAAAA,KAAK,CAACuB,WAAN,GAAqBS,OAAD,IAAa;AAC/B,UAAM2B,UAAU,GAAG3D,KAAK,CAACoD,aAAN,EAAnB;AAEA,WAAOO,UAAU,IAAIzD,oBAAWmB,MAAX,CAAkBsC,UAAlB,EAA8B3B,OAA9B,CAArB;AACD,GAJD;;AAMAhC,EAAAA,KAAK,CAAC4D,mBAAN,GAA4B,CAAC5B,OAAD,EAAU6B,YAAV,KAA2B;AACrD,UAAMC,aAAa,GAAG9D,KAAK,CAACS,mBAAN,CAA0BuB,OAA1B,CAAtB;;AACA,QAAI,CAAC8B,aAAL,EAAoB;AAClB;AACD;;AACD,UAAMC,iBAAiB,GAAGpC,gBAAEkB,MAAF,CAAS/D,KAAK,CAACgE,IAAN,IAAc,EAAvB,EAA2B;AACnDrE,MAAAA,GAAG,EAAEqF;AAD8C,KAA3B,CAA1B;;AAIAC,IAAAA,iBAAiB,CAACC,OAAlB,CAA2BC,gBAAD,IAAsB;AAC9CJ,MAAAA,YAAY,CAACI,gBAAD,EAAmBH,aAAnB,CAAZ;AACD,KAFD;AAGD,GAZD;;AAcA,SAAO9D,KAAP;AACD,CA/ND;;AAiOA,MAAMkE,WAAW,GAAIvE,OAAD,IAAa;AAC/B,QAAMwE,QAAQ,GAAG,EAAjB,CAD+B,CAG/B;;AACAA,EAAAA,QAAQ,CAACC,aAAT,GAAyBC,OAAO,CAAC1C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,8BAAf,CAAD,CAAhC,CAJ+B,CAM/B;;AACAwE,EAAAA,QAAQ,CAACnF,iBAAT,GAA6B2C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,kCAAf,KAAsD,EAAnF,CAP+B,CAS/B;;AACAwE,EAAAA,QAAQ,CAAChF,oBAAT,GAAgCwC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,qCAAf,CAAhC;AACAwE,EAAAA,QAAQ,CAAC/E,sBAAT,GAAkCuC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,uCAAf,CAAlC;AACAwE,EAAAA,QAAQ,CAAC9E,2BAAT,GAAuCsC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,4CAAf,CAAvC,CAZ+B,CAc/B;;AACAwE,EAAAA,QAAQ,CAAClF,kBAAT,GAA8B0C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,mCAAf,KAAuD,EAArF,CAf+B,CAiB/B;;AACAwE,EAAAA,QAAQ,CAACG,gBAAT,GAA4B3C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,iCAAf,KAAqD,IAAjF;AACAwE,EAAAA,QAAQ,CAACI,sBAAT,GAAkC5C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,uCAAf,KAA2D,IAA7F;AACAwE,EAAAA,QAAQ,CAACK,gBAAT,GAA4B7C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,iCAAf,KAAqD,IAAjF;AACAwE,EAAAA,QAAQ,CAACM,UAAT,GAAsB9C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,2BAAf,KAA+C,EAArE;AACAwE,EAAAA,QAAQ,CAACO,UAAT,GAAsB/C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,2BAAf,CAAtB;AACAwE,EAAAA,QAAQ,CAACQ,mBAAT,GAA+BhD,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,oCAAf,MAAyD,KAAxF;AACAwE,EAAAA,QAAQ,CAACS,iBAAT,GAA6BjD,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,kCAAf,MAAuD,KAApF;AACAwE,EAAAA,QAAQ,CAACU,6BAAT,GAAyClD,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,8CAAf,MAAmE,KAA5G;AACAwE,EAAAA,QAAQ,CAACW,eAAT,GAA2BT,OAAO,CAAC1C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,gCAAf,CAAD,CAAlC;AACAwE,EAAAA,QAAQ,CAACY,qBAAT,GAAiCV,OAAO,CAAC1C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,sCAAf,CAAD,CAAxC,CA3B+B,CA6B/B;;AACAwE,EAAAA,QAAQ,CAAC7E,yBAAT,GAAqCqC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,0CAAf,CAArC;AACAwE,EAAAA,QAAQ,CAAC5E,2BAAT,GAAuCoC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,4CAAf,CAAvC;AACAwE,EAAAA,QAAQ,CAAC3E,gCAAT,GAA4CmC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,iDAAf,CAA5C,CAhC+B,CAkC/B;;AACAwE,EAAAA,QAAQ,CAACjF,mBAAT,GAA+ByC,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,oCAAf,MAAyD,KAAxF;AACAwE,EAAAA,QAAQ,CAAC1E,qBAAT,GAAiC4E,OAAO,CAAC1C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,sCAAf,CAAD,CAAxC,CApC+B,CAsC/B;;AACAwE,EAAAA,QAAQ,CAACa,kBAAT,GAA8BX,OAAO,CAAC1C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,mCAAf,CAAD,CAArC,CAvC+B,CAyC/B;;AACAwE,EAAAA,QAAQ,CAACc,0BAAT,GAAsCZ,OAAO,CAAC1C,gBAAEC,GAAF,CAAMjC,OAAN,EAAe,2CAAf,CAAD,CAA7C;AAEA,SAAOwE,QAAP;AACD,CA7CD;AA+CA;;;;;;;;AAMA,MAAMe,UAAU,GAAG,CAACvF,OAAD,EAAU7B,WAAV,KAA0B;AAC3C,QAAM4B,MAAM,GAAG,CAACuB,OAAD,EAAUkE,GAAG,GAAG,IAAhB,EAAsBC,QAAQ,GAAG,IAAjC,EAAuC7G,IAAI,GAAG,IAA9C,KAAuD;AACpE,QAAIiF,GAAJ;;AAEA,QAAI4B,QAAJ,EAAc;AACZ,YAAMC,UAAU,GAAGvH,WAAW,CAAC0F,GAAZ,CAAgBC,KAAhB,CAAsB6B,IAAtB,GAA6BF,QAAQ,CAACE,IAAzD;AAEA9B,MAAAA,GAAG,GAAG;AACJ+B,QAAAA,GAAG,EAAE;AAACD,UAAAA,IAAI,EAAED;AAAP,SADD;AAEJ5B,QAAAA,KAAK,EAAE;AAAC6B,UAAAA,IAAI,EAAED;AAAP;AAFH,OAAN;;AAIA,UAAID,QAAQ,CAAC1B,MAAb,EAAqB;AACnB,cAAM8B,SAAS,GAAG1H,WAAW,CAAC0F,GAAZ,CAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B0B,QAAQ,CAAC1B,MAA1D;AAEAF,QAAAA,GAAG,CAAC+B,GAAJ,CAAQ7B,MAAR,GAAiB8B,SAAjB;AACAhC,QAAAA,GAAG,CAACC,KAAJ,CAAUC,MAAV,GAAmB8B,SAAnB;AACD;AACF;;AAED7F,IAAAA,OAAO,CAACD,MAAR,CAAe;AACbnB,MAAAA,IADa;AAEb4G,MAAAA,GAFa;AAGb3B,MAAAA,GAHa;AAIbvC,MAAAA,OAJa;AAKbpC,MAAAA,IAAI,EAAEf;AALO,KAAf;AAOD,GAzBD;;AA2BA,SAAO4B,MAAP;AACD,CA7BD;AA+BA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;AAOA,MAAM+F,gBAAgB,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AACjD,SAAO;AACLC,IAAAA,MAAM,CAAEjG,OAAF,EAAW;AACf,aAAO;AACL,yBAAkB;AAChB,gBAAMkG,QAAQ,GAAGlG,OAAO,CAACI,aAAR,GAAwB+F,cAAxB,EAAjB;AAEAD,UAAAA,QAAQ,CAAC7B,OAAT,CAAkB+B,OAAD,IAAa;AAC5B,gBAAI,CAACpG,OAAO,CAACI,aAAR,GAAwBiG,OAAxB,CAAgCD,OAAhC,EAAyCE,UAAzC,CAAoD,KAApD,CAAL,EAAiE;AAC/D;AACD;;AAED,kBAAMlI,MAAM,GAAG4D,gBAAE4B,MAAF,CAAS,GAAT,EAAcwC,OAAO,CAACvC,GAAR,CAAYC,KAAZ,CAAkBC,MAAhC,CAAf;;AACA,kBAAM5E,KAAK,GAAGjB,YAAY,CAACkI,OAAD,EAAUhI,MAAV,CAA1B;AACA,kBAAMoG,QAAQ,GAAGD,WAAW,CAACvE,OAAD,CAA5B;AACA,kBAAMD,MAAM,GAAGwF,UAAU,CAACvF,OAAD,EAAUoG,OAAV,CAAzB;AACA,kBAAMhH,SAAS,GAAGgH,OAAlB;AAEAL,YAAAA,QAAQ,CAAC;AACP/F,cAAAA,OADO;AAEP5B,cAAAA,MAFO;AAGPe,cAAAA,KAHO;AAIPC,cAAAA,SAJO;AAKPF,cAAAA,IAAI,EAAE,IALC;AAMPa,cAAAA,MANO;AAOPyE,cAAAA,QAAQ,EAAED,WAAW,CAACvE,OAAD,CAPd;AAQPG,cAAAA,UAAU,EAAEH,OAAO,CAACI,aAAR,EARL;AASPC,cAAAA,KAAK,EAAEpB,QAAQ,CAAC,IAAD,EAAOE,KAAP,EAAcC,SAAd,EAAyBoF,QAAzB,EAAmCzE,MAAnC,EAA2CC,OAA3C;AATR,aAAD,CAAR;AAWD,WAtBD;AAuBD;;AA3BI,OAAP;AA6BD,KA/BI;;AAgCLuG,IAAAA,IAAI,EAAEP,UAAU,CAACO;AAhCZ,GAAP;AAkCD,CAnCD;;AAyCA;;;;;;;;;AASe,SAASC,YAAT,CAAuBT,QAAvB,EAAiCC,UAAjC,EAA6C;AAC1D,QAAMS,QAAQ,GAAGzE,gBAAEC,GAAF,CAAM+D,UAAN,EAAkB,WAAlB,CAAjB;;AACA,MAAI,CAACS,QAAD,IAAa,CAAC,CAAC,SAAD,EAAY,YAAZ,EAA0B,QAA1B,EAAoC5H,QAApC,CAA6C4H,QAA7C,CAAlB,EAA0E;AACxE,UAAM,IAAIC,SAAJ,CAAc,wFAAd,CAAN;AACD;;AACD,MAAI,OAAOX,QAAP,KAAoB,UAApB,KAAmC,CAACC,UAAD,IAAe,OAAOA,UAAU,CAACW,OAAlB,KAA8B,UAAhF,CAAJ,EAAiG;AAC/F,UAAM,IAAID,SAAJ,CAAc,gFAAd,CAAN;AACD;;AAED,MAAIV,UAAU,CAACF,gBAAf,EAAiC;AAC/B,WAAOA,gBAAgB,CAACC,QAAD,EAAW;AAACQ,MAAAA,IAAI,EAAEP,UAAU,CAACO;AAAlB,KAAX,CAAvB;AACD;;AAED,SAAO;AACL;;;;;;;;;AASAN,IAAAA,MAAM,CAAEjG,OAAF,EAAW;AACf,YAAMG,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;AAEA,YAAMoE,QAAQ,GAAGD,WAAW,CAACvE,OAAD,CAA5B;AAEA,UAAI4G,QAAQ,GAAGZ,UAAU,CAACW,OAA1B;;AACA,UAAI,OAAOX,UAAU,CAACW,OAAlB,KAA8B,UAAlC,EAA8C;AAC5CC,QAAAA,QAAQ,GAAGZ,UAAU,CAACW,OAAX,CAAmB3G,OAAnB,EAA4BG,UAA5B,CAAX;AACD,OAFD,MAEO,IAAI6F,UAAU,CAACa,eAAf,EAAgC;AACrCD,QAAAA,QAAQ,GAAGrG,oBAAWuG,gBAAX,CAA4B9G,OAA5B,EAAqCgG,UAAU,CAACa,eAAhD,CAAX;AACD;;AAED,UAAI,CAACE,KAAK,CAACC,OAAN,CAAcJ,QAAd,CAAD,IAA4BA,QAAhC,EAA0C;AACxC,eAAOA,QAAP;AACD;;AACD,YAAMK,UAAU,GAAI/H,IAAD,IAAU;AAC3B,cAAME,SAAS,GAAG,8BAAgBe,UAAhB,EAA4BjB,IAA5B,CAAlB;;AAEA,YAAI,CAACE,SAAL,EAAgB;AACd;AACD;;AAED,cAAMhB,MAAM,GAAG4D,gBAAE4B,MAAF,CAAS,GAAT,EAAcxE,SAAS,CAACyE,GAAV,CAAcC,KAAd,CAAoBC,MAAlC,CAAf;;AAEA,cAAM5E,KAAK,GAAGjB,YAAY,CAACkB,SAAD,EAAYhB,MAAZ,CAA1B;AAEA,cAAM2B,MAAM,GAAGwF,UAAU,CAACvF,OAAD,EAAUZ,SAAV,CAAzB;AAEA,cAAMiB,KAAK,GAAGpB,QAAQ,CACpBC,IADoB,EAEpBC,KAFoB,EAGpBC,SAHoB,EAIpBoF,QAJoB,EAKpBzE,MALoB,EAMpBC,OANoB,CAAtB;;AASA,YACEwE,QAAQ,CAACC,aAAT,IACApE,KAAK,CAACqB,MAAN,CAAa,SAAb,CAFF,EAGE;AACA;AACD;;AAEDqE,QAAAA,QAAQ,CAAC;AACP/F,UAAAA,OADO;AAEP5B,UAAAA,MAFO;AAGPe,UAAAA,KAHO;AAIPC,UAAAA,SAJO;AAKPF,UAAAA,IALO;AAMPa,UAAAA,MANO;AAOPyE,UAAAA,QAPO;AAQPrE,UAAAA,UARO;AASPE,UAAAA;AATO,SAAD,CAAR;AAWD,OAxCD;;AAyCA,UAAI,CAACuG,QAAL,EAAe;AACb,eAAO;AACLM,UAAAA,uBAAuB,EAAED,UADpB;AAELE,UAAAA,mBAAmB,EAAEF,UAFhB;AAGLG,UAAAA,kBAAkB,EAAEH;AAHf,SAAP;AAKD;;AAED,aAAO1G,oBAAW8G,gBAAX,CAA4BT,QAA5B,EAAsCK,UAAtC,CAAP;AACD,KA3EI;;AA4ELV,IAAAA,IAAI,EAAEP,UAAU,CAACO;AA5EZ,GAAP;AA8ED","sourcesContent":["import _ from 'lodash';\nimport commentParser from 'comment-parser';\nimport jsdocUtils from './jsdocUtils';\nimport getJSDocComment from './eslint/getJSDocComment';\n\nconst parseComment = (commentNode, indent) => {\n  // Preserve JSDoc block start/end indentation.\n  return commentParser(indent + '/*' + commentNode.value + indent + '*/', {\n    // @see https://github.com/yavorskiy/comment-parser/issues/21\n    parsers: [\n      commentParser.PARSERS.parse_tag,\n      commentParser.PARSERS.parse_type,\n      (str, data) => {\n        if (['return', 'returns', 'throws', 'exception'].includes(data.tag)) {\n          return null;\n        }\n\n        return commentParser.PARSERS.parse_name(str, data);\n      },\n      commentParser.PARSERS.parse_description\n    ]\n  })[0] || {};\n};\n\nconst getUtils = (\n  node,\n  jsdoc,\n  jsdocNode,\n  {\n    tagNamePreference,\n    additionalTagNames,\n    allowEmptyNamepaths,\n    overrideReplacesDocs,\n    implementsReplacesDocs,\n    augmentsExtendsReplacesDocs,\n    allowOverrideWithoutParam,\n    allowImplementsWithoutParam,\n    allowAugmentsExtendsWithoutParam,\n    checkSeesForNamepaths\n  },\n  report,\n  context\n) => {\n  const ancestors = context.getAncestors();\n  const sourceCode = context.getSourceCode();\n\n  const utils = {};\n\n  utils.getFunctionParameterNames = () => {\n    return jsdocUtils.getFunctionParameterNames(node);\n  };\n\n  utils.isConstructor = () => {\n    return node.parent && node.parent.kind === 'constructor';\n  };\n\n  utils.isSetter = () => {\n    return node.parent.kind === 'set';\n  };\n\n  utils.getJsdocParameterNamesDeep = () => {\n    const param = utils.getPreferredTagName('param');\n    if (!param) {\n      return false;\n    }\n\n    return jsdocUtils.getJsdocParameterNamesDeep(jsdoc, param);\n  };\n\n  utils.getJsdocParameterNames = () => {\n    const param = utils.getPreferredTagName('param');\n    if (!param) {\n      return false;\n    }\n\n    return jsdocUtils.getJsdocParameterNames(jsdoc, param);\n  };\n\n  utils.getPreferredTagName = (name, allowObjectReturn = false, defaultMessage = `Unexpected tag \\`@${name}\\``) => {\n    const ret = jsdocUtils.getPreferredTagName(name, tagNamePreference);\n    const isObject = ret && typeof ret === 'object';\n    if (ret === false || isObject && !ret.replacement) {\n      const message = isObject && ret.message || defaultMessage;\n      report(message, null, utils.getTags(name)[0]);\n\n      return false;\n    }\n\n    return isObject && !allowObjectReturn ? ret.replacement : ret;\n  };\n\n  utils.isValidTag = (name) => {\n    return jsdocUtils.isValidTag(name, additionalTagNames);\n  };\n\n  utils.hasATag = (name) => {\n    return jsdocUtils.hasATag(jsdoc, name);\n  };\n\n  utils.hasTag = (name) => {\n    return jsdocUtils.hasTag(jsdoc, name);\n  };\n\n  // These settings are deprecated and may be removed in the future along with this method.\n  utils.avoidDocsParamOnly = () => {\n    // These three checks are all for deprecated settings and may be removed in the future\n\n    // When settings.jsdoc.allowOverrideWithoutParam is true, override implies that all documentation is inherited.\n    if ((utils.hasTag('override') || utils.classHasTag('override')) && allowOverrideWithoutParam !== false) {\n      return true;\n    }\n\n    // When settings.jsdoc.allowImplementsWithoutParam is true, implements implies that all documentation is inherited.\n    // See https://github.com/gajus/eslint-plugin-jsdoc/issues/100\n    if ((utils.hasTag('implements') || utils.classHasTag('implements')) && allowImplementsWithoutParam !== false) {\n      return true;\n    }\n\n    // When settings.jsdoc.allowAugmentsExtendsWithoutParam is true, augments or extends implies that all documentation is inherited.\n    if ((utils.hasTag('augments') || utils.hasTag('extends') ||\n      utils.classHasTag('augments') || utils.classHasTag('extends')) && allowAugmentsExtendsWithoutParam) {\n      return true;\n    }\n\n    return false;\n  };\n\n  utils.avoidDocsParamConditionally = (param) => {\n    // After deprecation, the `param` parameter can be removed, but for now,\n    //  don't default for `param` as it may have its own explicit settings to the contrary\n    return (param && overrideReplacesDocs || !param && overrideReplacesDocs !== false) &&\n      (utils.hasTag('override') || utils.classHasTag('override')) ||\n    (param && implementsReplacesDocs || !param && implementsReplacesDocs !== false) &&\n      (utils.hasTag('implements') || utils.classHasTag('implements'));\n  };\n\n  utils.avoidDocs = (param) => {\n    if (param && utils.avoidDocsParamOnly() ||\n      utils.avoidDocsParamConditionally(param) ||\n\n      // inheritdoc implies that all documentation is inherited; see https://jsdoc.app/tags-inheritdoc.html\n      utils.hasTag('inheritdoc') ||\n\n      augmentsExtendsReplacesDocs &&\n        (utils.hasATag(['augments', 'extends']) ||\n          utils.classHasTag('augments') ||\n            utils.classHasTag('extends'))) {\n      return true;\n    }\n\n    const exemptedBy = _.get(context, 'options[0].exemptedBy');\n    if (exemptedBy && exemptedBy.length && utils.getPresentTags(exemptedBy).length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  utils.isNamepathDefiningTag = (tagName) => {\n    return jsdocUtils.isNamepathDefiningTag(tagName);\n  };\n  utils.isNamepathTag = (tagName) => {\n    return jsdocUtils.isNamepathTag(tagName, checkSeesForNamepaths);\n  };\n\n  utils.isTagWithType = (tagName) => {\n    return jsdocUtils.isTagWithType(tagName);\n  };\n\n  utils.passesEmptyNamepathCheck = (tag) => {\n    return !tag.name && allowEmptyNamepaths &&\n      jsdocUtils.isPotentiallyEmptyNamepathTag(tag.tag);\n  };\n\n  utils.hasDefinedTypeReturnTag = (tag) => {\n    return jsdocUtils.hasDefinedTypeReturnTag(tag);\n  };\n\n  utils.hasReturnValue = (ignoreAsync = false) => {\n    return jsdocUtils.hasReturnValue(node, context, ignoreAsync);\n  };\n\n  utils.isAsync = () => {\n    return node.async;\n  };\n\n  utils.getTags = (tagName) => {\n    return utils.filterTags((item) => {\n      return item.tag === tagName;\n    });\n  };\n\n  utils.getPresentTags = (tagList) => {\n    return utils.filterTags((tag) => {\n      return tagList.includes(tag.tag);\n    });\n  };\n\n  utils.filterTags = (filter) => {\n    return (jsdoc.tags || []).filter(filter);\n  };\n\n  utils.getClassNode = () => {\n    const greatGrandParent = ancestors.slice(-3)[0];\n    const greatGrandParentValue = greatGrandParent && sourceCode.getFirstToken(greatGrandParent).value;\n\n    if (greatGrandParentValue === 'class') {\n      return greatGrandParent;\n    }\n\n    return false;\n  };\n\n  utils.getClassJsdoc = () => {\n    const classNode = utils.getClassNode();\n    const classJsdocNode = getJSDocComment(sourceCode, classNode);\n\n    if (classJsdocNode) {\n      const indent = _.repeat(' ', classJsdocNode.loc.start.column);\n\n      return parseComment(classJsdocNode, indent);\n    }\n\n    return null;\n  };\n\n  utils.classHasTag = (tagName) => {\n    const classJsdoc = utils.getClassJsdoc();\n\n    return classJsdoc && jsdocUtils.hasTag(classJsdoc, tagName);\n  };\n\n  utils.forEachPreferredTag = (tagName, arrayHandler) => {\n    const targetTagName = utils.getPreferredTagName(tagName);\n    if (!targetTagName) {\n      return;\n    }\n    const matchingJsdocTags = _.filter(jsdoc.tags || [], {\n      tag: targetTagName\n    });\n\n    matchingJsdocTags.forEach((matchingJsdocTag) => {\n      arrayHandler(matchingJsdocTag, targetTagName);\n    });\n  };\n\n  return utils;\n};\n\nconst getSettings = (context) => {\n  const settings = {};\n\n  // All rules\n  settings.ignorePrivate = Boolean(_.get(context, 'settings.jsdoc.ignorePrivate'));\n\n  // `check-tag-names` and many require/param rules\n  settings.tagNamePreference = _.get(context, 'settings.jsdoc.tagNamePreference') || {};\n\n  // `require-param`, `require-description`, `require-example`, `require-returns`\n  settings.overrideReplacesDocs = _.get(context, 'settings.jsdoc.overrideReplacesDocs');\n  settings.implementsReplacesDocs = _.get(context, 'settings.jsdoc.implementsReplacesDocs');\n  settings.augmentsExtendsReplacesDocs = _.get(context, 'settings.jsdoc.augmentsExtendsReplacesDocs');\n\n  // `check-tag-names` only\n  settings.additionalTagNames = _.get(context, 'settings.jsdoc.additionalTagNames') || {};\n\n  // `check-examples` only\n  settings.exampleCodeRegex = _.get(context, 'settings.jsdoc.exampleCodeRegex') || null;\n  settings.rejectExampleCodeRegex = _.get(context, 'settings.jsdoc.rejectExampleCodeRegex') || null;\n  settings.matchingFileName = _.get(context, 'settings.jsdoc.matchingFileName') || null;\n  settings.baseConfig = _.get(context, 'settings.jsdoc.baseConfig') || {};\n  settings.configFile = _.get(context, 'settings.jsdoc.configFile');\n  settings.eslintrcForExamples = _.get(context, 'settings.jsdoc.eslintrcForExamples') !== false;\n  settings.allowInlineConfig = _.get(context, 'settings.jsdoc.allowInlineConfig') !== false;\n  settings.reportUnusedDisableDirectives = _.get(context, 'settings.jsdoc.reportUnusedDisableDirectives') !== false;\n  settings.captionRequired = Boolean(_.get(context, 'settings.jsdoc.captionRequired'));\n  settings.noDefaultExampleRules = Boolean(_.get(context, 'settings.jsdoc.noDefaultExampleRules'));\n\n  // `require-param` only (deprecated)\n  settings.allowOverrideWithoutParam = _.get(context, 'settings.jsdoc.allowOverrideWithoutParam');\n  settings.allowImplementsWithoutParam = _.get(context, 'settings.jsdoc.allowImplementsWithoutParam');\n  settings.allowAugmentsExtendsWithoutParam = _.get(context, 'settings.jsdoc.allowAugmentsExtendsWithoutParam');\n\n  // `valid-types` only\n  settings.allowEmptyNamepaths = _.get(context, 'settings.jsdoc.allowEmptyNamepaths') !== false;\n  settings.checkSeesForNamepaths = Boolean(_.get(context, 'settings.jsdoc.checkSeesForNamepaths'));\n\n  // `require-returns` only\n  settings.forceRequireReturn = Boolean(_.get(context, 'settings.jsdoc.forceRequireReturn'));\n\n  // `require-example` only\n  settings.avoidExampleOnConstructors = Boolean(_.get(context, 'settings.jsdoc.avoidExampleOnConstructors'));\n\n  return settings;\n};\n\n/**\n * Create the report function\n *\n * @param {Object} context\n * @param {Object} commentNode\n */\nconst makeReport = (context, commentNode) => {\n  const report = (message, fix = null, jsdocLoc = null, data = null) => {\n    let loc;\n\n    if (jsdocLoc) {\n      const lineNumber = commentNode.loc.start.line + jsdocLoc.line;\n\n      loc = {\n        end: {line: lineNumber},\n        start: {line: lineNumber}\n      };\n      if (jsdocLoc.column) {\n        const colNumber = commentNode.loc.start.column + jsdocLoc.column;\n\n        loc.end.column = colNumber;\n        loc.start.column = colNumber;\n      }\n    }\n\n    context.report({\n      data,\n      fix,\n      loc,\n      message,\n      node: commentNode\n    });\n  };\n\n  return report;\n};\n\n/**\n * @typedef {ReturnType<typeof getUtils>} Utils\n * @typedef {ReturnType<typeof getSettings>} Settings\n * @typedef {(\n *   arg: {\n *     context: Object,\n *     sourceCode: Object,\n *     indent: string,\n *     jsdoc: Object,\n *     jsdocNode: Object,\n *     node: Object | null,\n *     report: ReturnType<typeof makeReport>,\n *     settings: Settings,\n *     utils: Utils,\n *   }\n * ) => any } JsdocVisitor\n */\n\n/**\n * Create an eslint rule that iterates over all JSDocs, regardless of whether\n * they are attached to a function-like node.\n *\n * @param {JsdocVisitor} iterator\n * @param {{meta: any}} ruleConfig\n */\nconst iterateAllJsdocs = (iterator, ruleConfig) => {\n  return {\n    create (context) {\n      return {\n        'Program:exit' () {\n          const comments = context.getSourceCode().getAllComments();\n\n          comments.forEach((comment) => {\n            if (!context.getSourceCode().getText(comment).startsWith('/**')) {\n              return;\n            }\n\n            const indent = _.repeat(' ', comment.loc.start.column);\n            const jsdoc = parseComment(comment, indent);\n            const settings = getSettings(context);\n            const report = makeReport(context, comment);\n            const jsdocNode = comment;\n\n            iterator({\n              context,\n              indent,\n              jsdoc,\n              jsdocNode,\n              node: null,\n              report,\n              settings: getSettings(context),\n              sourceCode: context.getSourceCode(),\n              utils: getUtils(null, jsdoc, jsdocNode, settings, report, context)\n            });\n          });\n        }\n      };\n    },\n    meta: ruleConfig.meta\n  };\n};\n\nexport {\n  parseComment\n};\n\n/**\n * @param {JsdocVisitor} iterator\n * @param {{\n *   meta: any,\n *   contextDefaults?: true | string[],\n *   returns?: any,\n *   iterateAllJsdocs?: true,\n * }} ruleConfig\n */\nexport default function iterateJsdoc (iterator, ruleConfig) {\n  const metaType = _.get(ruleConfig, 'meta.type');\n  if (!metaType || !['problem', 'suggestion', 'layout'].includes(metaType)) {\n    throw new TypeError('Rule must include `meta.type` option (with value \"problem\", \"suggestion\", or \"layout\")');\n  }\n  if (typeof iterator !== 'function' && (!ruleConfig || typeof ruleConfig.returns !== 'function')) {\n    throw new TypeError('The iterator argument must be a function or an object with a `returns` method.');\n  }\n\n  if (ruleConfig.iterateAllJsdocs) {\n    return iterateAllJsdocs(iterator, {meta: ruleConfig.meta});\n  }\n\n  return {\n    /**\n     * The entrypoint for the JSDoc rule.\n     *\n     * @param {*} context\n     *   a reference to the context which hold all important information\n     *   like settings and the sourcecode to check.\n     * @returns {Object}\n     *   a list with parser callback function.\n     */\n    create (context) {\n      const sourceCode = context.getSourceCode();\n\n      const settings = getSettings(context);\n\n      let contexts = ruleConfig.returns;\n      if (typeof ruleConfig.returns === 'function') {\n        contexts = ruleConfig.returns(context, sourceCode);\n      } else if (ruleConfig.contextDefaults) {\n        contexts = jsdocUtils.enforcedContexts(context, ruleConfig.contextDefaults);\n      }\n\n      if (!Array.isArray(contexts) && contexts) {\n        return contexts;\n      }\n      const checkJsdoc = (node) => {\n        const jsdocNode = getJSDocComment(sourceCode, node);\n\n        if (!jsdocNode) {\n          return;\n        }\n\n        const indent = _.repeat(' ', jsdocNode.loc.start.column);\n\n        const jsdoc = parseComment(jsdocNode, indent);\n\n        const report = makeReport(context, jsdocNode);\n\n        const utils = getUtils(\n          node,\n          jsdoc,\n          jsdocNode,\n          settings,\n          report,\n          context\n        );\n\n        if (\n          settings.ignorePrivate &&\n          utils.hasTag('private')\n        ) {\n          return;\n        }\n\n        iterator({\n          context,\n          indent,\n          jsdoc,\n          jsdocNode,\n          node,\n          report,\n          settings,\n          sourceCode,\n          utils\n        });\n      };\n      if (!contexts) {\n        return {\n          ArrowFunctionExpression: checkJsdoc,\n          FunctionDeclaration: checkJsdoc,\n          FunctionExpression: checkJsdoc\n        };\n      }\n\n      return jsdocUtils.getContextObject(contexts, checkJsdoc);\n    },\n    meta: ruleConfig.meta\n  };\n}\n"],"file":"iterateJsdoc.js"}