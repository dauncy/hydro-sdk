{"version":3,"sources":["../../src/rules/requireParam.js"],"names":["report","utils","functionParameterNames","getFunctionParameterNames","jsdocParameterNames","getJsdocParameterNames","avoidDocs","hasTag","some","functionParameterName","index","jsdocParameterName","getPreferredTagName","meta","schema","additionalProperties","properties","exemptedBy","items","type"],"mappings":";;;;;;;AAAA;;;;AAEA;eACe,2BAAa,CAAC;AAC3BA,EAAAA,MAD2B;AAE3BC,EAAAA;AAF2B,CAAD,KAGtB;AACJ,QAAMC,sBAAsB,GAAGD,KAAK,CAACE,yBAAN,EAA/B;AACA,QAAMC,mBAAmB,GAAGH,KAAK,CAACI,sBAAN,EAA5B;;AACA,MAAI,CAACD,mBAAL,EAA0B;AACxB;AACD;;AAED,MAAIH,KAAK,CAACK,SAAN,CAAgB,OAAhB,CAAJ,EAA8B;AAC5B;AACD,GATG,CAWJ;;;AACA,MAAIL,KAAK,CAACM,MAAN,CAAa,MAAb,CAAJ,EAA0B;AACxB;AACD;;AAEDL,EAAAA,sBAAsB,CAACM,IAAvB,CAA4B,CAACC,qBAAD,EAAwBC,KAAxB,KAAkC;AAC5D,UAAMC,kBAAkB,GAAGP,mBAAmB,CAACM,KAAD,CAA9C;;AAEA,QAAI,CAACC,kBAAL,EAAyB;AACvBX,MAAAA,MAAM,CAAC,oBAAoBC,KAAK,CAACW,mBAAN,CAA0B,OAA1B,CAApB,GAAyD,IAAzD,GAAgEH,qBAAhE,GAAwF,gBAAzF,CAAN;AAEA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAVD;AAWD,CA9Bc,EA8BZ;AACDI,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,oBAAoB,EAAE,KADxB;AAEEC,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE;AACVC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADG;AAIVA,UAAAA,IAAI,EAAE;AAJI;AADF,OAFd;AAUEA,MAAAA,IAAI,EAAE;AAVR,KADM,CADJ;AAeJA,IAAAA,IAAI,EAAE;AAfF;AADL,CA9BY,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\n// eslint-disable-next-line complexity\nexport default iterateJsdoc(({\n  report,\n  utils\n}) => {\n  const functionParameterNames = utils.getFunctionParameterNames();\n  const jsdocParameterNames = utils.getJsdocParameterNames();\n  if (!jsdocParameterNames) {\n    return;\n  }\n\n  if (utils.avoidDocs('param')) {\n    return;\n  }\n\n  // Param type is specified by type in @type\n  if (utils.hasTag('type')) {\n    return;\n  }\n\n  functionParameterNames.some((functionParameterName, index) => {\n    const jsdocParameterName = jsdocParameterNames[index];\n\n    if (!jsdocParameterName) {\n      report('Missing JSDoc @' + utils.getPreferredTagName('param') + ' \"' + functionParameterName + '\" declaration.');\n\n      return true;\n    }\n\n    return false;\n  });\n}, {\n  meta: {\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          exemptedBy: {\n            items: {\n              type: 'string'\n            },\n            type: 'array'\n          }\n        },\n        type: 'object'\n      }\n    ],\n    type: 'suggestion'\n  }\n});\n"],"file":"requireParam.js"}